# Maven package Java project Web App to Linux on Azure
# Build your Java project and deploy it to Azure as a Linux web app
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
  - master
  - develop

variables:
  # Azure Resource Manager connection created during pipeline creation
  azureSubscription: "Azure サブスクリプション 1 (fa9b75dc-7175-4760-9539-ba8151ec6183)"

  # Web app name
  webAppName: "app-mrs"

  # Environment name
  environmentName: "app-mrs"

  # Agent VM image name
  vmImageName: "ubuntu-latest"

stages:
  - stage: Build
    displayName: Build stage
    jobs:
      - job: MavenPackageAndPublishArtifacts
        displayName: Maven Package and Publish Artifacts
        pool:
          vmImage: $(vmImageName)
        strategy:
          matrix:
            node_12_x:
              node_version: 12.x
            node_13_x:
              node_version: 13.x

        steps:
          - task: NodeTool@0
            inputs:
              versionSpec: $(node_version)

          - script: npm install
          - script: npm run build:prd

          - task: Maven@3
            inputs:
              mavenPomFile: "pom.xml"
              mavenOptions: "-Xmx3072m"
              javaHomeOption: "JDKVersion"
              jdkVersionOption: "1.11"
              jdkArchitectureOption: "x64"
              publishJUnitResults: true
              testResultsFiles: "**/TEST-*.xml"
              goals: "package"

          - task: PublishCodeCoverageResults@1
            inputs:
              codeCoverageTool: 'JaCoCo'
              summaryFileLocation: '$(System.DefaultWorkingDirectory)/target/site/jacoco/jacoco.xml'
              reportDirectory: '$(System.DefaultWorkingDirectory)/target/site/jacoco'

          - task: CopyFiles@2
            displayName: "Copy Files to artifact staging directory"
            inputs:
              SourceFolder: "$(System.DefaultWorkingDirectory)"
              Contents: "**/target/*.?(war|jar)"
              TargetFolder: $(Build.ArtifactStagingDirectory)

          - upload: $(Build.ArtifactStagingDirectory)
            artifact: drop

  - stage: Deploy
    displayName: Deploy stage
    dependsOn: Build
    condition: succeeded()
    jobs:
      - deployment: DeployLinuxWebApp
        displayName: Deploy Linux Web App
        environment: $(environmentName)
        pool:
          vmImage: $(vmImageName)
        strategy:
          runOnce:
            deploy:
              steps:
                - task: AzureWebApp@1
                  displayName: "Azure Web App Deploy: app-mrs"
                  inputs:
                    azureSubscription: $(azureSubscription)
                    appType: webAppLinux
                    appName: $(webAppName)
                    package: "$(Pipeline.Workspace)/drop/**/target/*.?(war|jar)"
